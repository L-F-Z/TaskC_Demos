Bootstrap: docker
From: pytorch/pytorch:1.12.1-cuda11.3-cudnn8-devel

%setup
    # 在构建时从主机复制必要的文件（如果有）
    mkdir -p ${APPTAINER_ROOTFS}/mmpretrain  
    cp -r ./mmpretrain/* ${APPTAINER_ROOTFS}/mmpretrain/

%environment
    export TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0+PTX"
    export TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
    export CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"

%post
    export TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0+PTX"
    export TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
    export CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"
    
    # 更新apt-key并获取必要的密钥
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub

    # 更新软件包列表并安装必要的软件包
    apt-get update && apt-get install -y \
        ffmpeg \
        libsm6 \
        libxext6 \
        git \
        ninja-build \
        libglib2.0-0 \
        libxrender-dev \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/*

    # 安装 MIM（OpenMMLab 包管理工具）
    pip install openmim

    # 清理 conda 缓存
    conda clean --all

    # 克隆 MMPretrain 项目
    # 如果在 %setup 中已复制 mmpretrain 代码，可以跳过 git clone  
    # 否则，克隆 mmpretrain 仓库  
    if [ ! -d "/mmpretrain" ]; then  
        git clone https://github.com/open-mmlab/mmpretrain.git /mmpretrain  
    fi

    # 安装 MMPretrain
    cd /mmpretrain
    mim install --no-cache-dir -e .

%runscript
    # 定义容器运行时的默认命令
    echo "Welcome to MMPretrain!"
    exec "$@"