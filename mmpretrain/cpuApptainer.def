Bootstrap: docker  
From: 192.168.2.25:10081/pytorch/pytorch:1.12.1-cuda11.3-cudnn8-devel

%environment  
    export CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"

%setup  
    mkdir -p ${APPTAINER_ROOTFS}/mmpretrain  
    cp -r ./mmpretrain/* ${APPTAINER_ROOTFS}/mmpretrain/

%post  
    set -e  

    # Modify /etc/apt/sources.list to use PkgCache
    total_lines=$(wc -l < /etc/apt/sources.list) && lines_to_keep=$((total_lines - 6)) && head -n $lines_to_keep /etc/apt/sources.list > /etc/apt/sources.list.new
    sed -i 's|http://archive.ubuntu.com/ubuntu/|http://192.168.2.25:9081/repository/ubuntu/|g' /etc/apt/sources.list.new
    mv /etc/apt/sources.list.new /etc/apt/sources.list
    
    apt-get update  

    apt-get install -y \
        ffmpeg \
        libsm6 \
        libxext6 \
        curl \
        ninja-build \
        libglib2.0-0 \
        libxrender-dev  

    apt-get clean  

    rm -rf /var/lib/apt/lists/*  

    # Modify ~/.pip/pip.conf to use PkgCache
    mkdir ~/.pip/; test -f ~/.pip/pip.conf && mv ~/.pip/pip.conf ~/.pip/pip.conf.bak; curl -s -o ~/.pip/pip.conf -m 3 https://raw.githubusercontent.com/brandnewworld/staging/refs/heads/main/pip.conf

    pip install openmim  

    # Modify ~/.conda/.condarc to use PkgCache
    mkdir ~/.conda/; test -f ~/.conda/.condarc && mv ~/.conda/.condarc ~/.conda/.condarc.bak; curl -s -o ~/.conda/.condarc -m 3 https://raw.githubusercontent.com/brandnewworld/staging/refs/heads/main/.condarc

    conda clean --all

    # if [ ! -d "/mmpretrain" ]; then  
    #     git clone https://github.com/open-mmlab/mmpretrain.git /mmpretrain  
    # fi

    cd /mmpretrain  
    mim install --no-cache-dir -e .

%runscript  
    echo "Usage: apptainer run container.sif <args>"  
    exec "$@"

